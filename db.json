{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/favicon.ico","hash":"02bb3ca6cf337bf67e2025a570c66bf5a3a96654","modified":1395311947000},{"_id":"themes/yilia/README.md","hash":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1467091882000},{"_id":"themes/yilia/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1467091882000},{"_id":"themes/yilia/_config.yml","hash":"2499a9aed83990a4955d5c7a619de8c7b6d87a4b","modified":1467171876937},{"_id":"themes/yilia/package.json","hash":"00357ef6f24eb049074da81809e98f973f528cca","modified":1467091882000},{"_id":"source/_posts/golang-deamon.md","hash":"ebb107ded75f06418d0ca0d8f62c30932a68d8e2","modified":1467171793346},{"_id":"source/_posts/tcp-load-balancing.md","hash":"c1207c779b949159d6aaab48f5c7d1aedb94b9af","modified":1467171804690},{"_id":"source/about/index.md","hash":"7dfa362c1b0e61cc2bb1ab4c5a92355646a5c140","modified":1467171646911},{"_id":"source/project/index.md","hash":"01707f43a11a8f325922d386f219090bae7de99e","modified":1467171650721},{"_id":"themes/yilia/.git/COMMIT_EDITMSG","hash":"c07f317c4127d8667a4bd6c08d48e716b1d47da1","modified":1467095884918},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1467091882000},{"_id":"themes/yilia/.git/config","hash":"b56bd1e2e2456c4bc1d55e99775875dbd544e2c7","modified":1467091882000},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1467091871000},{"_id":"themes/yilia/.git/index","hash":"09e32636adfc94043fa53d9c975bc740f2933d7e","modified":1467095884916},{"_id":"themes/yilia/.git/packed-refs","hash":"102a8556f68dca2b07b7ef5c523080d0dcbbe257","modified":1467091882000},{"_id":"themes/yilia/languages/de.yml","hash":"ecb13af8af81ccc033ae7494cb2f94f84f6466ad","modified":1467091882000},{"_id":"themes/yilia/languages/en.yml","hash":"8fa0a7482188ca56fd3cf19c4a87320f85a76846","modified":1467091882000},{"_id":"themes/yilia/languages/default.yml","hash":"9e59cd11b290be84909612beb12d0f93ce737f53","modified":1467091882000},{"_id":"themes/yilia/languages/fr-FR.yml","hash":"12cfa96dc412ecb6f8bf4de2690575929464906e","modified":1467091882000},{"_id":"themes/yilia/languages/ru.yml","hash":"9997425292031ee8a58a93346ac6d3f38f18e566","modified":1467091882000},{"_id":"themes/yilia/languages/zh-Hans.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1467091882000},{"_id":"themes/yilia/languages/zh-hk.yml","hash":"606dfb34d3fec1d7895a654ff7a5a1de0c6a5c55","modified":1467091882000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"9e4034870b57d2bb3063c91f8d206a6c4d7b3789","modified":1467091882000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1467091882000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1467091882000},{"_id":"themes/yilia/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1467091882000},{"_id":"themes/yilia/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1467091882000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1467091882000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1467091882000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1467091882000},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1467091871000},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1467091871000},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1467091871000},{"_id":"themes/yilia/.git/logs/HEAD","hash":"e3d763c3956e68db767cd761f0904b3d8e99b932","modified":1467095884921},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"082504c9fd8600306d4ca55f03e3cbb0ddd99dd7","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"8dfb6d68aa8a0661d26c32ce1ce1f45815364c3a","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"d6306cd897683c25184a50b29931aa1fa18d119c","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"f7068535c0df7e7bc6614a046e7d4b262a65d8b2","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"47dc7c1d35928a7b026c683547f8482d2e524c63","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"fff29e619af2b1abcab7d5d2d6f78428272f18f7","modified":1467091882000},{"_id":"themes/yilia/source/css/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1467091882000},{"_id":"themes/yilia/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1467091882000},{"_id":"themes/yilia/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1467091882000},{"_id":"themes/yilia/source/css/style.styl","hash":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1467091882000},{"_id":"themes/yilia/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1467091882000},{"_id":"themes/yilia/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1467091882000},{"_id":"themes/yilia/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1467091882000},{"_id":"themes/yilia/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1467091882000},{"_id":"themes/yilia/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1467091882000},{"_id":"themes/yilia/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1467091882000},{"_id":"themes/yilia/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1467091882000},{"_id":"themes/yilia/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1467091882000},{"_id":"themes/yilia/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1467091882000},{"_id":"themes/yilia/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1467091882000},{"_id":"themes/yilia/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1467091882000},{"_id":"themes/yilia/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1467091882000},{"_id":"themes/yilia/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1467091882000},{"_id":"themes/yilia/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1467091882000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1467091882000},{"_id":"themes/yilia/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1467091882000},{"_id":"themes/yilia/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1467091882000},{"_id":"themes/yilia/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1467091882000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","hash":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1467091882000},{"_id":"themes/yilia/source/js/main.js","hash":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1467091882000},{"_id":"themes/yilia/source/js/mobile.js","hash":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1467091882000},{"_id":"themes/yilia/source/js/pc.js","hash":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1467091882000},{"_id":"themes/yilia/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1467091882000},{"_id":"themes/yilia/.git/objects/03/8c820ce497b394f84e128a5263408b528da752","hash":"87c897c67b2a056cbd001fe29e214955843a06c2","modified":1467095884919},{"_id":"themes/yilia/.git/objects/2f/c4f171e255936640266f524a36ae319a888782","hash":"c7df40253f149304fc2b02408ba5382b963f46a7","modified":1467095884916},{"_id":"themes/yilia/.git/objects/fa/aa30ee1378da43763f2e9f49bdf2a42746b69d","hash":"67a434c315d4f77716532786d7094c8872e1263c","modified":1467095884285},{"_id":"themes/yilia/.git/objects/pack/pack-b4a1819f4fa2e0d3d354f9b63da62c032afe72a5.idx","hash":"cd682103e38d4b329b0f767e5a21757ebe313169","modified":1467091882000},{"_id":"themes/yilia/.git/refs/heads/master","hash":"cc799a0588db8c2e7da764b7ef90b1d2e75a47ce","modified":1467095884920},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"c0c988334e857a77ba455a056dfa21809e7e76a5","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"d4f0e36f9a2167e91082dbd7d52425a06d2bebbf","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"d19dee2082528e1844bed3aa4e4bd59f15fd7a7a","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"0ac35bd92e58983c189ac0c35df404ebc6ee826e","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"924744aa3c1bce9056ba03cec02e19e095009126","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"78612cfc091d7d861a70455a0dc8c3036e460879","modified":1467091882000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/archive.styl","hash":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/article.styl","hash":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/footer.styl","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","hash":"08d3205dde3235f3e6881126268e6c473f46a8ac","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","hash":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/main.styl","hash":"c368f1533053d4cffdf0ad982603271400b08e33","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","hash":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","hash":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/page.styl","hash":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/scroll.styl","hash":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/share.styl","hash":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","hash":"af0115de5c6455f899a2e09225b50224982c039d","modified":1467091882000},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1467091882000},{"_id":"themes/yilia/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1467091882000},{"_id":"themes/yilia/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1467091882000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1467091882000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1467091882000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1467091882000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1467091882000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1467091882000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1467091882000},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"e3d763c3956e68db767cd761f0904b3d8e99b932","modified":1467095884921},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1467091882000},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"a670e5f8eb8c07c3f648c17b9ac75278ed843677","modified":1467091882000},{"_id":"themes/yilia/.git/objects/pack/pack-b4a1819f4fa2e0d3d354f9b63da62c032afe72a5.pack","hash":"d454ca775cf58dc0be426bb978a326c18d11e1f1","modified":1467095884000},{"_id":"public/atom.xml","hash":"7b631358607cfb19c5360bae8b045a0eb62c8d77","modified":1467171968060},{"_id":"public/sitemap.xml","hash":"e847f9b805a505ba1a15769d891f0e08061c4f27","modified":1467171968061},{"_id":"public/about/index.html","hash":"9f64af42d72b97b177c45d3dc461093b5ab73f2a","modified":1467171968064},{"_id":"public/project/index.html","hash":"a108927aaa15db1db561719b188f7e00d2a8fc2a","modified":1467171968064},{"_id":"public/posts/program/2016/06/29/tcp-load-balancing.html","hash":"59880a09564ece540b93953b0a92bf25f746ab42","modified":1467171968064},{"_id":"public/archives/index.html","hash":"7cd8b7e7bc47b7d35b6edacb97a59e7b1ccac5f6","modified":1467171968064},{"_id":"public/archives/2016/index.html","hash":"33ace53a31cc33cb4bfa29075d0e5ebe519ea915","modified":1467171968064},{"_id":"public/archives/2016/06/index.html","hash":"fde84aac4d9e32a9b73d7eb775eae9e4040f2ebf","modified":1467171968065},{"_id":"public/categories/program/index.html","hash":"870624d84254042ddc5a462042ec31c01bbc8369","modified":1467171968065},{"_id":"public/tags/golang/index.html","hash":"44ab924823f4f238b276e55bb84e87b4f497cff6","modified":1467171968065},{"_id":"public/tags/linux/index.html","hash":"e197f98cb70ffee14eeb44ccc4898c2b7bcd1bb9","modified":1467171968065},{"_id":"public/posts/program/2016/06/28/golang-deamon.html","hash":"c2e647c81bc5a99d0d9bbf31fe8a2ab6ec086ad8","modified":1467171968065},{"_id":"public/index.html","hash":"2ab4a9a566e93623cc34fac3913a2103cbb28a93","modified":1467171968065},{"_id":"public/favicon.ico","hash":"02bb3ca6cf337bf67e2025a570c66bf5a3a96654","modified":1467171968074},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1467171968074},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1467171968074},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1467171968074},{"_id":"public/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1467171968074},{"_id":"public/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1467171968074},{"_id":"public/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1467171968075},{"_id":"public/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1467171968075},{"_id":"public/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1467171968075},{"_id":"public/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1467171968075},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1467171968075},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1467171968075},{"_id":"public/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1467171968075},{"_id":"public/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1467171968075},{"_id":"public/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1467171968075},{"_id":"public/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1467171968075},{"_id":"public/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1467171968075},{"_id":"public/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1467171968075},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1467171968075},{"_id":"public/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1467171968076},{"_id":"public/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1467171968076},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1467171968076},{"_id":"public/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1467171968076},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1467171968076},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1467171968076},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1467171968076},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1467171968076},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1467171968076},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1467171968076},{"_id":"public/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1467171968798},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1467171968799},{"_id":"public/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1467171968808},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1467171968808},{"_id":"public/js/jquery.lazyload.js","hash":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1467171968808},{"_id":"public/js/main.js","hash":"0640b68a76fab3c693b3cd1e4d04d14be1e53940","modified":1467171968808},{"_id":"public/js/mobile.js","hash":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1467171968808},{"_id":"public/js/pc.js","hash":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10","modified":1467171968808},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1467171968808},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1467171968808},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1467171968808},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1467171968808},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1467171968808},{"_id":"public/css/style.css","hash":"10e9b93cf935a165020e48334a40b84b0f895401","modified":1467171968808},{"_id":"public/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1467171968808},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1467171968808}],"Category":[{"name":"编程","_id":"ciq0cb3it0005u8wab5mkkx1f"}],"Data":[],"Page":[{"layout":"page","title":"关于","date":"2016-06-28T07:19:42.000Z","tags":null,"categories":null,"_content":"\n***关于***\n","source":"about/index.md","raw":"---\nlayout: page\ntitle: 关于\ndate: 2016-06-28 15:19:42\ntags: \ncategories: \n---\n\n***关于***\n","updated":"2016-06-29T03:40:46.911Z","path":"about/index.html","comments":1,"_id":"ciq0cb3ik0001u8waatts7fho","content":"<p><strong><em>关于</em></strong></p>\n","excerpt":"","more":"<p><strong><em>关于</em></strong></p>\n"},{"layout":"page","title":"project","date":"2016-06-28T08:18:46.000Z","tags":null,"categories":null,"_content":"","source":"project/index.md","raw":"---\nlayout: page\ntitle: project\ndate: 2016-06-28 16:18:46\ntags: \ncategories: \n---\n","updated":"2016-06-29T03:40:50.721Z","path":"project/index.html","comments":1,"_id":"ciq0cb3ip0003u8wa68p52vm9","content":"","excerpt":"","more":""}],"Post":[{"title":"golang-守护进程","date":"2016-06-28T06:15:04.000Z","_content":"\n### 代码块\n``` golang\npackage main\n \nimport (\n    \"fmt\"\n    \"log\"\n    \"os\"\n    \"runtime\"\n    \"syscall\"\n    \"time\"\n)\n \nfunc daemon(nochdir, noclose int) int {\n    var ret, ret2 uintptr\n    var err syscall.Errno\n \n    darwin := runtime.GOOS == \"darwin\"\n \n    // already a daemon\n    if syscall.Getppid() == 1 {\n        return 0\n    }\n \n    // fork off the parent process\n    ret, ret2, err = syscall.RawSyscall(syscall.SYS_FORK, 0, 0, 0)\n    if err != 0 {\n        return -1\n    }\n \n    // failure\n    if ret2 < 0 {\n        os.Exit(-1)\n    }\n \n    // handle exception for darwin\n    if darwin && ret2 == 1 {\n        ret = 0\n    }\n \n    // if we got a good PID, then we call exit the parent process.\n    if ret > 0 {\n        os.Exit(0)\n    }\n \n    /* Change the file mode mask */\n    _ = syscall.Umask(0)\n \n    // create a new SID for the child process\n    s_ret, s_errno := syscall.Setsid()\n    if s_errno != nil {\n        log.Printf(\"Error: syscall.Setsid errno: %d\", s_errno)\n    }\n    if s_ret < 0 {\n        return -1\n    }\n \n    if nochdir == 0 {\n        os.Chdir(\"/\")\n    }\n \n    if noclose == 0 {\n        f, e := os.OpenFile(\"/dev/null\", os.O_RDWR, 0)\n        if e == nil {\n            fd := f.Fd()\n            syscall.Dup2(int(fd), int(os.Stdin.Fd()))\n            syscall.Dup2(int(fd), int(os.Stdout.Fd()))\n            syscall.Dup2(int(fd), int(os.Stderr.Fd()))\n        }\n    }\n \n    return 0\n}\n \nfunc main() {\n    daemon(0, 1)\n    for {\n        fmt.Println(\"hello\")\n        time.Sleep(1 * time.Second)\n    }\n \n}\n```\n","source":"_posts/golang-deamon.md","raw":"---\ntitle: golang-守护进程\ndate: 2016-06-28 14:15:04\ntags: golang\ncategories: 编程\n---\n\n### 代码块\n``` golang\npackage main\n \nimport (\n    \"fmt\"\n    \"log\"\n    \"os\"\n    \"runtime\"\n    \"syscall\"\n    \"time\"\n)\n \nfunc daemon(nochdir, noclose int) int {\n    var ret, ret2 uintptr\n    var err syscall.Errno\n \n    darwin := runtime.GOOS == \"darwin\"\n \n    // already a daemon\n    if syscall.Getppid() == 1 {\n        return 0\n    }\n \n    // fork off the parent process\n    ret, ret2, err = syscall.RawSyscall(syscall.SYS_FORK, 0, 0, 0)\n    if err != 0 {\n        return -1\n    }\n \n    // failure\n    if ret2 < 0 {\n        os.Exit(-1)\n    }\n \n    // handle exception for darwin\n    if darwin && ret2 == 1 {\n        ret = 0\n    }\n \n    // if we got a good PID, then we call exit the parent process.\n    if ret > 0 {\n        os.Exit(0)\n    }\n \n    /* Change the file mode mask */\n    _ = syscall.Umask(0)\n \n    // create a new SID for the child process\n    s_ret, s_errno := syscall.Setsid()\n    if s_errno != nil {\n        log.Printf(\"Error: syscall.Setsid errno: %d\", s_errno)\n    }\n    if s_ret < 0 {\n        return -1\n    }\n \n    if nochdir == 0 {\n        os.Chdir(\"/\")\n    }\n \n    if noclose == 0 {\n        f, e := os.OpenFile(\"/dev/null\", os.O_RDWR, 0)\n        if e == nil {\n            fd := f.Fd()\n            syscall.Dup2(int(fd), int(os.Stdin.Fd()))\n            syscall.Dup2(int(fd), int(os.Stdout.Fd()))\n            syscall.Dup2(int(fd), int(os.Stderr.Fd()))\n        }\n    }\n \n    return 0\n}\n \nfunc main() {\n    daemon(0, 1)\n    for {\n        fmt.Println(\"hello\")\n        time.Sleep(1 * time.Second)\n    }\n \n}\n```\n","slug":"golang-deamon","published":1,"updated":"2016-06-29T03:43:13.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciq0cb3ig0000u8wag4j2frg5","content":"<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">    <span class=\"string\">\"log\"</span></span><br><span class=\"line\">    <span class=\"string\">\"os\"</span></span><br><span class=\"line\">    <span class=\"string\">\"runtime\"</span></span><br><span class=\"line\">    <span class=\"string\">\"syscall\"</span></span><br><span class=\"line\">    <span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">daemon</span><span class=\"params\">(nochdir, noclose <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ret, ret2 <span class=\"keyword\">uintptr</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> err syscall.Errno</span><br><span class=\"line\"> </span><br><span class=\"line\">    darwin := runtime.GOOS == <span class=\"string\">\"darwin\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// already a daemon</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> syscall.Getppid() == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// fork off the parent process</span></span><br><span class=\"line\">    ret, ret2, err = syscall.RawSyscall(syscall.SYS_FORK, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// failure</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ret2 &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        os.Exit(<span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// handle exception for darwin</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> darwin &amp;&amp; ret2 == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">        ret = <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// if we got a good PID, then we call exit the parent process.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ret &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        os.Exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/* Change the file mode mask */</span></span><br><span class=\"line\">    _ = syscall.Umask(<span class=\"number\">0</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// create a new SID for the child process</span></span><br><span class=\"line\">    s_ret, s_errno := syscall.Setsid()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s_errno != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        log.Printf(<span class=\"string\">\"Error: syscall.Setsid errno: %d\"</span>, s_errno)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s_ret &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> nochdir == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        os.Chdir(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> noclose == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        f, e := os.OpenFile(<span class=\"string\">\"/dev/null\"</span>, os.O_RDWR, <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> e == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">            fd := f.Fd()</span><br><span class=\"line\">            syscall.Dup2(<span class=\"keyword\">int</span>(fd), <span class=\"keyword\">int</span>(os.Stdin.Fd()))</span><br><span class=\"line\">            syscall.Dup2(<span class=\"keyword\">int</span>(fd), <span class=\"keyword\">int</span>(os.Stdout.Fd()))</span><br><span class=\"line\">            syscall.Dup2(<span class=\"keyword\">int</span>(fd), <span class=\"keyword\">int</span>(os.Stderr.Fd()))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    daemon(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">\"hello\"</span>)</span><br><span class=\"line\">        time.Sleep(<span class=\"number\">1</span> * time.Second)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">    <span class=\"string\">\"log\"</span></span><br><span class=\"line\">    <span class=\"string\">\"os\"</span></span><br><span class=\"line\">    <span class=\"string\">\"runtime\"</span></span><br><span class=\"line\">    <span class=\"string\">\"syscall\"</span></span><br><span class=\"line\">    <span class=\"string\">\"time\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">daemon</span><span class=\"params\">(nochdir, noclose <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ret, ret2 <span class=\"keyword\">uintptr</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> err syscall.Errno</span><br><span class=\"line\"> </span><br><span class=\"line\">    darwin := runtime.GOOS == <span class=\"string\">\"darwin\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// already a daemon</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> syscall.Getppid() == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// fork off the parent process</span></span><br><span class=\"line\">    ret, ret2, err = syscall.RawSyscall(syscall.SYS_FORK, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// failure</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ret2 &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        os.Exit(<span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// handle exception for darwin</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> darwin &amp;&amp; ret2 == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">        ret = <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// if we got a good PID, then we call exit the parent process.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ret &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        os.Exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/* Change the file mode mask */</span></span><br><span class=\"line\">    _ = syscall.Umask(<span class=\"number\">0</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// create a new SID for the child process</span></span><br><span class=\"line\">    s_ret, s_errno := syscall.Setsid()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s_errno != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        log.Printf(<span class=\"string\">\"Error: syscall.Setsid errno: %d\"</span>, s_errno)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s_ret &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> nochdir == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        os.Chdir(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> noclose == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        f, e := os.OpenFile(<span class=\"string\">\"/dev/null\"</span>, os.O_RDWR, <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> e == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">            fd := f.Fd()</span><br><span class=\"line\">            syscall.Dup2(<span class=\"keyword\">int</span>(fd), <span class=\"keyword\">int</span>(os.Stdin.Fd()))</span><br><span class=\"line\">            syscall.Dup2(<span class=\"keyword\">int</span>(fd), <span class=\"keyword\">int</span>(os.Stdout.Fd()))</span><br><span class=\"line\">            syscall.Dup2(<span class=\"keyword\">int</span>(fd), <span class=\"keyword\">int</span>(os.Stderr.Fd()))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    daemon(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">\"hello\"</span>)</span><br><span class=\"line\">        time.Sleep(<span class=\"number\">1</span> * time.Second)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"tcp长连接负载均衡","date":"2016-06-29T02:57:41.000Z","_content":"\n**1.   ****LVS** **性能最强**\n\n<span style=\"line-height: 1.5;\">1\\. LVS ：Linux Virtual Server（VS），请求对于RealServer（RS）都是透明的（不修改Src），使用内核转发，相比应用实现性能要高很多。</span>\n\n分为3种模式：\n\nl  DR：性能最好\n\n在VS 和RS 使用相同的VIP，RS上抑制ARP。请求通过VS 分发，应答绕过直接回复。\n\n**优点**：性能最高、流量小\n\n**缺点**：机器都需要在同一个Vlan下，Real Server 之间无法通过VIP通信。需要抑制VIP ARP 有风险。\n\nl  IP Tunnel 性能适中\n\n使用IPIP封包，解决跨Vlan问题，相比DR 就多了一层IP封装，也是只处理请求。\n\n**优点**：跨Vlan\n\n**缺点**：虽然应用最为广泛，但windows 不支持IPIP。\n\nl  NAT\n\n与前两种相比，不需要绑定VIP，但也要修改路由，RealServer 所有流量都需要经过，需要处理很多无用流量，一般实用性很差。\n\n**优点：**不需要要绑定VIP、跨VLAN\n\n支持RS 通过VIP访问RS本身，需要对RS做抑制路由操作，所有流量直接发给网关。\n\n**缺点**：对于请求为SNAT，应答为DNAT。为实现DNAT，需要将RS 的默认网关指向VS\n\nVS 被当成网关处理，RealServer所有的流量都将发给VS，VS的带宽压力会很大。\n\n**配置工具**：如果使用ReadHat版本，可以使用[**Piranha**](http://www.linuxvirtualserver.org/docs/ha/piranha.html) 提供的WEB UI工具配置，配置为需要手动同步一下主板配置。\n\n　　　　如果需要部署多个实例，而且经常改动，Piranha 将提供很友好的配置环境。\n\n**2\\. HaProxy 性能高，处理高并发、高连接**\n\n**优点：**\n\nl  性能高，20w连接下，处理10w/s请求\n\n （单进程处理性能1w/s样子，为更好利用多核，多进程模式提升空间很少，需要开启多个实例，这样一来前端必须上LVS负载多个实例端口）\n\nl  7层、4层都行\n\nl  不限于VLan ，只要网络策略通即可\n\nl  可配性高\n\nl  监控完善\n\n** 注意点：**\n\nl Src IP被修改，业务中publicIP应该从 x-forward-for中获取（Haproxy也支持透明代理，就像LVS的NAT模式，存在问题）\n\nl 流量double，千M网卡最多也只能支持500M流量\n\n<span style=\"line-height: 1.5;\"> 连接数超过65535时，需要考虑绑定多个IP</span>\n\nTcp 转发性能要比nginx要好。\n\nHaProxy 是默认单线程、也是最高效方式；也可以支持多线程（进程），但监控会随机请求到的业务、部分功能无法正常使用。\n\n<span style=\"line-height: 1.5;\"> </span>\n\n**3\\. Nginx 专注于7层高并发，但不善于处理1w+连接数**\n\n要支持4层需要另外的patch，而且高连接数时性能无法和haproxy相比。\n\n默认1个master+ 多个（核心）Worker，可充分利用多核资源。\n\nMaster和worker之间通过进程通信实现，有点像IIS5，相比II6 性能要差些。\n\n<span style=\"line-height: 1.5;\"> </span>\n\n**不管HaProxy还是Nginx 都存在一个问题，就是只有一个线程在做Receive，也就是无法均衡软中断。\n\n 对于主要的四层负载，用户态执行时间很短，性能瓶颈在于主要软中断的处理、多个work其实也无济于事；\n\n 当然也可以使用redis那样，开启多实例方式。\n\n**5\\. Windows Server 内置NBL 负载均衡功能**\n\n原理和LVS的DR相似，但是相比更加暴力，请求使用广播方式，同一个交换机下RS都将受到请求，RS通过一致性算法确认自己改处理请求还是丢弃请求。\n\n","source":"_posts/tcp-load-balancing.md","raw":"---\nlayout: post\ntitle: tcp长连接负载均衡\ndate: 2016-06-29 10:57:41\ntags: linux\ncategories: 编程\n---\n\n**1.   ****LVS** **性能最强**\n\n<span style=\"line-height: 1.5;\">1\\. LVS ：Linux Virtual Server（VS），请求对于RealServer（RS）都是透明的（不修改Src），使用内核转发，相比应用实现性能要高很多。</span>\n\n分为3种模式：\n\nl  DR：性能最好\n\n在VS 和RS 使用相同的VIP，RS上抑制ARP。请求通过VS 分发，应答绕过直接回复。\n\n**优点**：性能最高、流量小\n\n**缺点**：机器都需要在同一个Vlan下，Real Server 之间无法通过VIP通信。需要抑制VIP ARP 有风险。\n\nl  IP Tunnel 性能适中\n\n使用IPIP封包，解决跨Vlan问题，相比DR 就多了一层IP封装，也是只处理请求。\n\n**优点**：跨Vlan\n\n**缺点**：虽然应用最为广泛，但windows 不支持IPIP。\n\nl  NAT\n\n与前两种相比，不需要绑定VIP，但也要修改路由，RealServer 所有流量都需要经过，需要处理很多无用流量，一般实用性很差。\n\n**优点：**不需要要绑定VIP、跨VLAN\n\n支持RS 通过VIP访问RS本身，需要对RS做抑制路由操作，所有流量直接发给网关。\n\n**缺点**：对于请求为SNAT，应答为DNAT。为实现DNAT，需要将RS 的默认网关指向VS\n\nVS 被当成网关处理，RealServer所有的流量都将发给VS，VS的带宽压力会很大。\n\n**配置工具**：如果使用ReadHat版本，可以使用[**Piranha**](http://www.linuxvirtualserver.org/docs/ha/piranha.html) 提供的WEB UI工具配置，配置为需要手动同步一下主板配置。\n\n　　　　如果需要部署多个实例，而且经常改动，Piranha 将提供很友好的配置环境。\n\n**2\\. HaProxy 性能高，处理高并发、高连接**\n\n**优点：**\n\nl  性能高，20w连接下，处理10w/s请求\n\n （单进程处理性能1w/s样子，为更好利用多核，多进程模式提升空间很少，需要开启多个实例，这样一来前端必须上LVS负载多个实例端口）\n\nl  7层、4层都行\n\nl  不限于VLan ，只要网络策略通即可\n\nl  可配性高\n\nl  监控完善\n\n** 注意点：**\n\nl Src IP被修改，业务中publicIP应该从 x-forward-for中获取（Haproxy也支持透明代理，就像LVS的NAT模式，存在问题）\n\nl 流量double，千M网卡最多也只能支持500M流量\n\n<span style=\"line-height: 1.5;\"> 连接数超过65535时，需要考虑绑定多个IP</span>\n\nTcp 转发性能要比nginx要好。\n\nHaProxy 是默认单线程、也是最高效方式；也可以支持多线程（进程），但监控会随机请求到的业务、部分功能无法正常使用。\n\n<span style=\"line-height: 1.5;\"> </span>\n\n**3\\. Nginx 专注于7层高并发，但不善于处理1w+连接数**\n\n要支持4层需要另外的patch，而且高连接数时性能无法和haproxy相比。\n\n默认1个master+ 多个（核心）Worker，可充分利用多核资源。\n\nMaster和worker之间通过进程通信实现，有点像IIS5，相比II6 性能要差些。\n\n<span style=\"line-height: 1.5;\"> </span>\n\n**不管HaProxy还是Nginx 都存在一个问题，就是只有一个线程在做Receive，也就是无法均衡软中断。\n\n 对于主要的四层负载，用户态执行时间很短，性能瓶颈在于主要软中断的处理、多个work其实也无济于事；\n\n 当然也可以使用redis那样，开启多实例方式。\n\n**5\\. Windows Server 内置NBL 负载均衡功能**\n\n原理和LVS的DR相似，但是相比更加暴力，请求使用广播方式，同一个交换机下RS都将受到请求，RS通过一致性算法确认自己改处理请求还是丢弃请求。\n\n","slug":"tcp-load-balancing","published":1,"updated":"2016-06-29T03:43:24.690Z","comments":1,"photos":[],"link":"","_id":"ciq0cb3im0002u8waauihrs8b","content":"<p><strong>1.   **</strong>LVS<strong> </strong>性能最强**</p>\n<p><span style=\"line-height: 1.5;\">1. LVS ：Linux Virtual Server（VS），请求对于RealServer（RS）都是透明的（不修改Src），使用内核转发，相比应用实现性能要高很多。</span></p>\n<p>分为3种模式：</p>\n<p>l  DR：性能最好</p>\n<p>在VS 和RS 使用相同的VIP，RS上抑制ARP。请求通过VS 分发，应答绕过直接回复。</p>\n<p><strong>优点</strong>：性能最高、流量小</p>\n<p><strong>缺点</strong>：机器都需要在同一个Vlan下，Real Server 之间无法通过VIP通信。需要抑制VIP ARP 有风险。</p>\n<p>l  IP Tunnel 性能适中</p>\n<p>使用IPIP封包，解决跨Vlan问题，相比DR 就多了一层IP封装，也是只处理请求。</p>\n<p><strong>优点</strong>：跨Vlan</p>\n<p><strong>缺点</strong>：虽然应用最为广泛，但windows 不支持IPIP。</p>\n<p>l  NAT</p>\n<p>与前两种相比，不需要绑定VIP，但也要修改路由，RealServer 所有流量都需要经过，需要处理很多无用流量，一般实用性很差。</p>\n<p><strong>优点：</strong>不需要要绑定VIP、跨VLAN</p>\n<p>支持RS 通过VIP访问RS本身，需要对RS做抑制路由操作，所有流量直接发给网关。</p>\n<p><strong>缺点</strong>：对于请求为SNAT，应答为DNAT。为实现DNAT，需要将RS 的默认网关指向VS</p>\n<p>VS 被当成网关处理，RealServer所有的流量都将发给VS，VS的带宽压力会很大。</p>\n<p><strong>配置工具</strong>：如果使用ReadHat版本，可以使用<a href=\"http://www.linuxvirtualserver.org/docs/ha/piranha.html\" target=\"_blank\" rel=\"external\"><strong>Piranha</strong></a> 提供的WEB UI工具配置，配置为需要手动同步一下主板配置。</p>\n<p>　　　　如果需要部署多个实例，而且经常改动，Piranha 将提供很友好的配置环境。</p>\n<p><strong>2. HaProxy 性能高，处理高并发、高连接</strong></p>\n<p><strong>优点：</strong></p>\n<p>l  性能高，20w连接下，处理10w/s请求</p>\n<p> （单进程处理性能1w/s样子，为更好利用多核，多进程模式提升空间很少，需要开启多个实例，这样一来前端必须上LVS负载多个实例端口）</p>\n<p>l  7层、4层都行</p>\n<p>l  不限于VLan ，只要网络策略通即可</p>\n<p>l  可配性高</p>\n<p>l  监控完善</p>\n<p><strong> 注意点：</strong></p>\n<p>l Src IP被修改，业务中publicIP应该从 x-forward-for中获取（Haproxy也支持透明代理，就像LVS的NAT模式，存在问题）</p>\n<p>l 流量double，千M网卡最多也只能支持500M流量</p>\n<p><span style=\"line-height: 1.5;\"> 连接数超过65535时，需要考虑绑定多个IP</span></p>\n<p>Tcp 转发性能要比nginx要好。</p>\n<p>HaProxy 是默认单线程、也是最高效方式；也可以支持多线程（进程），但监控会随机请求到的业务、部分功能无法正常使用。</p>\n<p><span style=\"line-height: 1.5;\"> </span></p>\n<p><strong>3. Nginx 专注于7层高并发，但不善于处理1w+连接数</strong></p>\n<p>要支持4层需要另外的patch，而且高连接数时性能无法和haproxy相比。</p>\n<p>默认1个master+ 多个（核心）Worker，可充分利用多核资源。</p>\n<p>Master和worker之间通过进程通信实现，有点像IIS5，相比II6 性能要差些。</p>\n<p><span style=\"line-height: 1.5;\"> </span></p>\n<p>**不管HaProxy还是Nginx 都存在一个问题，就是只有一个线程在做Receive，也就是无法均衡软中断。</p>\n<p> 对于主要的四层负载，用户态执行时间很短，性能瓶颈在于主要软中断的处理、多个work其实也无济于事；</p>\n<p> 当然也可以使用redis那样，开启多实例方式。</p>\n<p><strong>5. Windows Server 内置NBL 负载均衡功能</strong></p>\n<p>原理和LVS的DR相似，但是相比更加暴力，请求使用广播方式，同一个交换机下RS都将受到请求，RS通过一致性算法确认自己改处理请求还是丢弃请求。</p>\n","excerpt":"","more":"<p><strong>1.   **</strong>LVS<strong> </strong>性能最强**</p>\n<p><span style=\"line-height: 1.5;\">1. LVS ：Linux Virtual Server（VS），请求对于RealServer（RS）都是透明的（不修改Src），使用内核转发，相比应用实现性能要高很多。</span></p>\n<p>分为3种模式：</p>\n<p>l  DR：性能最好</p>\n<p>在VS 和RS 使用相同的VIP，RS上抑制ARP。请求通过VS 分发，应答绕过直接回复。</p>\n<p><strong>优点</strong>：性能最高、流量小</p>\n<p><strong>缺点</strong>：机器都需要在同一个Vlan下，Real Server 之间无法通过VIP通信。需要抑制VIP ARP 有风险。</p>\n<p>l  IP Tunnel 性能适中</p>\n<p>使用IPIP封包，解决跨Vlan问题，相比DR 就多了一层IP封装，也是只处理请求。</p>\n<p><strong>优点</strong>：跨Vlan</p>\n<p><strong>缺点</strong>：虽然应用最为广泛，但windows 不支持IPIP。</p>\n<p>l  NAT</p>\n<p>与前两种相比，不需要绑定VIP，但也要修改路由，RealServer 所有流量都需要经过，需要处理很多无用流量，一般实用性很差。</p>\n<p><strong>优点：</strong>不需要要绑定VIP、跨VLAN</p>\n<p>支持RS 通过VIP访问RS本身，需要对RS做抑制路由操作，所有流量直接发给网关。</p>\n<p><strong>缺点</strong>：对于请求为SNAT，应答为DNAT。为实现DNAT，需要将RS 的默认网关指向VS</p>\n<p>VS 被当成网关处理，RealServer所有的流量都将发给VS，VS的带宽压力会很大。</p>\n<p><strong>配置工具</strong>：如果使用ReadHat版本，可以使用<a href=\"http://www.linuxvirtualserver.org/docs/ha/piranha.html\"><strong>Piranha</strong></a> 提供的WEB UI工具配置，配置为需要手动同步一下主板配置。</p>\n<p>　　　　如果需要部署多个实例，而且经常改动，Piranha 将提供很友好的配置环境。</p>\n<p><strong>2. HaProxy 性能高，处理高并发、高连接</strong></p>\n<p><strong>优点：</strong></p>\n<p>l  性能高，20w连接下，处理10w/s请求</p>\n<p> （单进程处理性能1w/s样子，为更好利用多核，多进程模式提升空间很少，需要开启多个实例，这样一来前端必须上LVS负载多个实例端口）</p>\n<p>l  7层、4层都行</p>\n<p>l  不限于VLan ，只要网络策略通即可</p>\n<p>l  可配性高</p>\n<p>l  监控完善</p>\n<p><strong> 注意点：</strong></p>\n<p>l Src IP被修改，业务中publicIP应该从 x-forward-for中获取（Haproxy也支持透明代理，就像LVS的NAT模式，存在问题）</p>\n<p>l 流量double，千M网卡最多也只能支持500M流量</p>\n<p><span style=\"line-height: 1.5;\"> 连接数超过65535时，需要考虑绑定多个IP</span></p>\n<p>Tcp 转发性能要比nginx要好。</p>\n<p>HaProxy 是默认单线程、也是最高效方式；也可以支持多线程（进程），但监控会随机请求到的业务、部分功能无法正常使用。</p>\n<p><span style=\"line-height: 1.5;\"> </span></p>\n<p><strong>3. Nginx 专注于7层高并发，但不善于处理1w+连接数</strong></p>\n<p>要支持4层需要另外的patch，而且高连接数时性能无法和haproxy相比。</p>\n<p>默认1个master+ 多个（核心）Worker，可充分利用多核资源。</p>\n<p>Master和worker之间通过进程通信实现，有点像IIS5，相比II6 性能要差些。</p>\n<p><span style=\"line-height: 1.5;\"> </span></p>\n<p>**不管HaProxy还是Nginx 都存在一个问题，就是只有一个线程在做Receive，也就是无法均衡软中断。</p>\n<p> 对于主要的四层负载，用户态执行时间很短，性能瓶颈在于主要软中断的处理、多个work其实也无济于事；</p>\n<p> 当然也可以使用redis那样，开启多实例方式。</p>\n<p><strong>5. Windows Server 内置NBL 负载均衡功能</strong></p>\n<p>原理和LVS的DR相似，但是相比更加暴力，请求使用广播方式，同一个交换机下RS都将受到请求，RS通过一致性算法确认自己改处理请求还是丢弃请求。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciq0cb3ig0000u8wag4j2frg5","category_id":"ciq0cb3it0005u8wab5mkkx1f","_id":"ciq0cb3iy0009u8wa4lqqw8kg"},{"post_id":"ciq0cb3im0002u8waauihrs8b","category_id":"ciq0cb3it0005u8wab5mkkx1f","_id":"ciq0cb3iz000bu8wahwfle78z"}],"PostTag":[{"post_id":"ciq0cb3ig0000u8wag4j2frg5","tag_id":"ciq0cb3ir0004u8wadoszwtsz","_id":"ciq0cb3ix0008u8wat9asjfwr"},{"post_id":"ciq0cb3im0002u8waauihrs8b","tag_id":"ciq0cb3iw0006u8wa853xnj2k","_id":"ciq0cb3iz000au8warkmmox8d"}],"Tag":[{"name":"golang","_id":"ciq0cb3ir0004u8wadoszwtsz"},{"name":"linux","_id":"ciq0cb3iw0006u8wa853xnj2k"}]}}